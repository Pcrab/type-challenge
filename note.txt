898-includes
infer,  extends, readonly
// explain Expect
https://stackoverflow.com/questions/68961864/how-does-the-equals-work-in-typescript/68963796#68963796

type Equals<X, Y> =
    (<T>() => T extends X ? 1 : 2) extends
    (<T>() => T extends Y ? 1 : 2) ? true : false;

会检查是否所有类型都满足既能赋值给X，也能赋值给Y

type Equals<X, Y> = X extends Y ? Y extends X ? true : false : false;

只会检查是否 X 能赋值给 Y 且 Y 能赋值给 X，在部分情况下会出现错误

3312-parameters
(...args: any[]) => any 应当写成 (...args: never[]) => unknown
需要使用者明确指定类型的时候用 unknown
不需要知道这是什么类型的时候用 never

3-omit
https://www.typescriptlang.org/docs/handbook/2/mapped-types.html#key-remapping-via-as
使用 as 来 remap key

9-deep-readonly
https://stackoverflow.com/questions/68693054/what-is-extends-never-used-for/68693367
extends never 指找不到任何确定的 key 的情况
因此 {a: string} | {b: string} 也没有确定的 key，会继承 never

12-chainable-options
题目挺好，result3 又要有 type-error 又要通过不太合理
